name: Fetch YouTube policies (quincenal)

on:
  workflow_dispatch:
  schedule:
    # 09:00 UTC los días 1 y 16 de cada mes (04:00 Lima aprox)
    - cron: "0 9 1,16 * *"

jobs:
  scrape:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install beautifulsoup4 lxml

      # (Opcional) inspección rápida del JSON para asegurarnos que no trae \n dentro de las URLs
      - name: Debug policy_urls.json (raw)
        run: |
          python - <<'PY'
          from pathlib import Path
          p = Path("scripts/policy_urls.json")
          if not p.exists():
              print("policy_urls.json not found")
          else:
              b = p.read_bytes()
              print("BYTES:", len(b))
              s = b.decode("utf-8", "ignore")
              out = []
              for ch in s:
                  o = ord(ch)
                  out.append(ch if 32 <= o < 127 else f"\\x{o:02x}")
              print("RAW:", "".join(out))
          PY

      # Ver que el runner usa el script correcto
      - name: Show commit & script fingerprint
        run: |
          set -euo pipefail
          echo "[GIT] HEAD SHA: $(git rev-parse HEAD)"
          python - <<'PY'
          import os, hashlib
          p = "scripts/fetch_youtube_policies.py"
          print(os.path.abspath(p))
          with open(p, "rb") as f:
              b = f.read()
          print("[FILE] sha256:", hashlib.sha256(b).hexdigest())
          print("[FILE] head:")
          print("".join(open(p, encoding="utf-8").read().splitlines(True)[:80]))
          PY

      - name: Run fetch_youtube_policies.py
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
          CONTACT_EMAIL: ${{ secrets.CONTACT_EMAIL }}
          POLICY_MAX_CHARS: "12000"
        run: |
          set -euo pipefail
          python -u ./scripts/fetch_youtube_policies.py
